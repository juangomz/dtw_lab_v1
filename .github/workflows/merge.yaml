name: Feature Branches & Merge Workflow
run-name: "Build and Test by @${{ github.actor }}"

on:
  push:
    branches:
      - main

env:
  LOGIN_SERVER: ${{ secrets.LOGIN_SERVER }}  # Docker registry server (e.g., DockerHub or Azure registry)
  TEAM_NUMBER: ${{ vars.TEAM_NUMBER }}
  RESOURCE_GROUP: ${{ vars.RESOURCE_GROUP }}
  IMAGE_TAG: ${{ github.sha }}  # Use commit SHA as the image tag
  REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}  # Docker registry username
  REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}  # Docker registry password
  DEV_API_KEY: ${{ secrets.DEV_API_KEY }}  # Secret for dev environment

permissions: read-all

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: poetry install

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Docker login using registry username and password
      - name: Docker login to registry
        run: echo ${{ secrets.REGISTRY_PASSWORD }} | docker login ${{ secrets.LOGIN_SERVER }} --username ${{ secrets.REGISTRY_USERNAME }} --password-stdin

      - name: Build Docker image
        run: |
          docker build -t $LOGIN_SERVER/team${TEAM_NUMBER}:${IMAGE_TAG} .

      - name: Run release script
        run: |
          chmod +x ./scripts/release.sh
          ./scripts/release.sh $IMAGE_TAG

      - name: Push Docker image to registry
        run: |
          docker push $LOGIN_SERVER/team${TEAM_NUMBER}:${IMAGE_TAG}

  deploy-to-dev:
    runs-on: ubuntu-latest
    needs: release  # This job runs after the release job
    environment: development  # Triggers manual approval if set in GitHub Actions
    steps:
      - uses: actions/checkout@v3

      - name: Set up Azure CLI
        uses: azure/setup-azurecli@v1

      - name: Azure login using service principal
        run: |
          az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Deploy to Dev
        run: |
          chmod +x ./scripts/deploy.sh
          ./scripts/deploy.sh --env dev --image $LOGIN_SERVER/team${TEAM_NUMBER}:${IMAGE_TAG}

      - name: Notify successful deployment
        run: echo "Deployment to Dev completed!"

  e2e-tests:
    runs-on: ubuntu-latest
    needs: deploy-to-dev  # Waits until deploy-to-dev is done
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          poetry install

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Run E2E tests
        run: |
          chmod +x ./scripts/e2e_test.sh
          ./scripts/e2e_test.sh  # Run the E2E test script

      - name: Notify successful tests (optional)
        run: echo "End-to-end tests passed successfully!"
