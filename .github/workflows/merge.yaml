name: Feature Branches & Merge Workflow
run-name: "Release, Deploy and e2e test by @${{ github.actor }}"

on:
  push:
    branches:
      - main

env:
  LOGIN_SERVER: ${{ secrets.LOGIN_SERVER }}  # Docker registry server (e.g., DockerHub or Azure registry)
  TEAM_NUMBER: ${{ vars.TEAM_NUMBER }}
  RESOURCE_GROUP: ${{ vars.RESOURCE_GROUP }}
  
permissions: read-all

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: poetry install

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Run unit tests
      run: poetry run pytest 
      
    - name: Build Docker image
      run: |
        chmod +x ./scripts/build.sh
        ./scripts/build.sh

    - name: Run Integration tests and Release script
      run: |
        chmod +x ./scripts/integration_test.sh
        ./scripts/integration_test.sh

    - name: Release image
      id: release
      env:
        REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
        REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
      run: |
        chmod +x ./scripts/release.sh
        ./scripts/release.sh
    
    outputs:
        package-version: ${{ steps.release.outputs.package-version }}
  
  deploy-to-dev:
    runs-on: ubuntu-latest
    needs: release  # This job runs after the release job
    environment: development  # Triggers manual approval if set in GitHub Actions
    env:
      PACKAGE_VERSION: ${{ needs.release.outputs.package-version }}
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
      REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
      
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Deploy to Dev
        run: |
          chmod +x ./scripts/deploy.sh
          ./scripts/deploy.sh
          
      - name: Notify successful deployment
        run: echo "Deployment to Dev completed!"

  e2e-tests:
    runs-on: ubuntu-latest
    needs: deploy-to-dev  # Waits until deploy-to-dev is done
    
    steps:
    - uses: actions/checkout@v3
    - name: Run E2E test
      run: |
        chmod +x ./scripts/e2e_test.sh
        ./scripts/e2e_test.sh

    - name: Notify successful tests (optional)
      run: echo "End-to-end tests passed successfully!"
